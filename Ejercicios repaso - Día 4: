/**
 * ##########################################
 * #### S E A T I N G    S T U D E N T S ####
 * ##########################################
 */

/**
 * En un aula encontramos un nÃºmero indeterminado de
 * pupitres organizados en dos columnas. Algunos
 * pupitres estÃ¡n ocupados mientras otros estÃ¡n vacÃ­os.
 *
 * El array "bussyDesks" sigue el siguiente formato:
 * `[K, r1, r2, r3, ...] ` donde `K` es el total de
 * pupitres que hay en el aula. El resto de valores
 * se corresponden a los pupitres que ya estÃ¡n
 * ocupados.
 *
 * Debes averiguar la cantidad de formas en que 2
 * estudiantes pueden sentarse uno al lado del otro.
 * Esto significa que 1 estudiante estÃ¡ a la izquierda
 * y 1 estudiante a la derecha, o que 1 estudiante estÃ¡
 * directamente arriba o debajo de otro estudiante.
 *
 * Ejemplo: `[12, 2, 6, 7, 11]`
 *
 * BasÃ¡ndose en esta disposiciÃ³n de escritorios ocupados,
 * hay un total de 6 formas de acomodar a 2 nuevos
 * estudiantes uno al lado del otro. Las combinaciones
 * son:
 *
 * `[1, 3], [3, 4], [3, 5], [8, 10], [9, 10], [10, 12]`
 *
 * Entonces, para el array del ejemplo, el programa
 * deberÃ­a devolver 6.
 *
 * `K` variarÃ¡ de 2 a 24 y siempre serÃ¡ un nÃºmero par.
 * DespuÃ©s de `K`, el nÃºmero de escritorios ocupados en
 * la matriz puede variar de `0` a `K`.
 */
const pupitresOcupados = [12, 2, 6, 7, 11];

const totalPupitres = pupitresOcupados.shift();
console.log(pupitresOcupados);

/*let result = 0;
for (let i = 1; i < totalPupitres; i++) {
  if (pupitresOcupados.indexOf(i) === -1) {
    if (i % 2 !== 0) {
      const right = i + 1;
      const down = i + 1;
      if (pupitresOcupados.indexOf(right) === -1) {
        result++;
      }
      if (pupitresOcupados.indexOf(down) === -1) {
        result++;
      }
    }
  }
}
*/
let pupitres = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];
let par = [];
let impar = [];
for (let pupitre of pupitres) {
  if (pupitre % 2 === 0) {
    par.push(pupitre);
  } else {
    impar.push(pupitre);
  }
}

console.log(impar);

let resultado = 0;
for (let i = 0; i < impar.length; i++) {
  for (let j = 0; j < pupitresOcupados.length; j++) {
    if (
      impar[i] !== pupitresOcupados[j] &&
      impar[i] + 2 !== pupitresOcupados[j]
    ) {
      resultado++;
      console.log(resultado);
    }
    if (
      impar[i] !== pupitresOcupados[j] &&
      impar[i] + 1 !== pupitresOcupados[j]
    ) {
      resultado++;
    }
  }
}

console.log(resultado);
